#!/bin/bash

# –ë—ã—Å—Ç—Ä—ã–π installer –¥–ª—è HNS Studio –Ω–∞ Ubuntu —Å–µ—Ä–≤–µ—Ä–µ
# –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω–∞ –≤–∞—à —Å–µ—Ä–≤–µ—Ä –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ

cat << 'SCRIPT_CONTENT' > /tmp/deploy_hns.sh
#!/bin/bash

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è HNS –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ Ubuntu —Å–µ—Ä–≤–µ—Ä–µ
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy_hns.sh [–¥–æ–º–µ–Ω] [database_password] [telegram_bot_token] [telegram_chat_id]

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ $# -lt 2 ]; then
    echo -e "${RED}–û—à–∏–±–∫–∞: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤${NC}"
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–¥–æ–º–µ–Ω] [database_password] [telegram_bot_token] [telegram_chat_id]"
    echo "–ü—Ä–∏–º–µ—Ä: $0 hns.dev mySecurePass123 your_bot_token your_chat_id"
    exit 1
fi

DOMAIN=$1
DB_PASSWORD=$2
TELEGRAM_BOT_TOKEN=${3:-""}
TELEGRAM_CHAT_ID=${4:-""}
PROJECT_DIR="/var/www/hns-studio"
DB_NAME="hns_studio"
DB_USER="hns_user"

echo -e "${BLUE}üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ HNS Studio –Ω–∞ –¥–æ–º–µ–Ω–µ: $DOMAIN${NC}"

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
echo -e "${YELLOW}üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã...${NC}"
apt update && apt upgrade -y

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
echo -e "${YELLOW}üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤...${NC}"
apt install -y curl git nginx postgresql postgresql-contrib ufw fail2ban certbot python3-certbot-nginx

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js 20
echo -e "${YELLOW}üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js 20...${NC}"
curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
apt install -y nodejs

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PM2 –≥–ª–æ–±–∞–ª—å–Ω–æ
npm install -g pm2

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo -e "${YELLOW}üë§ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...${NC}"
useradd -m -s /bin/bash hns || echo "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å hns —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
usermod -aG sudo hns

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PostgreSQL
echo -e "${YELLOW}üóÑÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PostgreSQL...${NC}"
systemctl start postgresql
systemctl enable postgresql

# –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
sudo -u postgres psql -c "CREATE USER $DB_USER WITH PASSWORD '$DB_PASSWORD';" || echo "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
sudo -u postgres psql -c "CREATE DATABASE $DB_NAME OWNER $DB_USER;" || echo "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE $DB_NAME TO $DB_USER;"

# –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
echo -e "${YELLOW}üìÅ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞...${NC}"
mkdir -p $PROJECT_DIR
chown hns:hns $PROJECT_DIR

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
echo -e "${YELLOW}‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞...${NC}"
tee $PROJECT_DIR/.env > /dev/null <<EOF
NODE_ENV=production
PORT=3000
DATABASE_URL=postgresql://$DB_USER:$DB_PASSWORD@localhost:5432/$DB_NAME
TELEGRAM_BOT_TOKEN=$TELEGRAM_BOT_TOKEN
TELEGRAM_CHAT_ID=$TELEGRAM_CHAT_ID
EOF

chown hns:hns $PROJECT_DIR/.env

# –°–æ–∑–¥–∞–Ω–∏–µ Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo -e "${YELLOW}üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx...${NC}"
tee /etc/nginx/sites-available/$DOMAIN > /dev/null <<EOF
server {
    listen 80;
    server_name $DOMAIN www.$DOMAIN;

    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_cache_bypass \$http_upgrade;
    }

    # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
    location /assets/ {
        alias $PROJECT_DIR/dist/client/assets/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    location /attached_assets/ {
        alias $PROJECT_DIR/attached_assets/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Gzip —Å–∂–∞—Ç–∏–µ
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
}
EOF

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Å–∞–π—Ç–∞ –≤ Nginx
ln -sf /etc/nginx/sites-available/$DOMAIN /etc/nginx/sites-enabled/
rm -f /etc/nginx/sites-enabled/default

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx
nginx -t

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞
echo -e "${YELLOW}üî• –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞...${NC}"
ufw --force enable
ufw allow ssh
ufw allow 'Nginx Full'

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Nginx
systemctl restart nginx
systemctl enable nginx

# –°–æ–∑–¥–∞–Ω–∏–µ PM2 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo -e "${YELLOW}‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ PM2 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...${NC}"
sudo -u hns tee $PROJECT_DIR/ecosystem.config.js > /dev/null <<EOF
module.exports = {
  apps: [{
    name: 'hns-studio',
    script: 'server/index.ts',
    interpreter: 'npx',
    interpreter_args: 'tsx',
    cwd: '$PROJECT_DIR',
    instances: 1,
    autorestart: true,
    watch: false,
    max_memory_restart: '1G',
    env: {
      NODE_ENV: 'production',
      PORT: 3000
    },
    error_file: './logs/err.log',
    out_file: './logs/out.log',
    log_file: './logs/combined.log',
    time: true
  }]
};
EOF

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
sudo -u hns mkdir -p $PROJECT_DIR/logs

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
tee $PROJECT_DIR/update.sh > /dev/null <<'EOFUPDATE'
#!/bin/bash
cd /var/www/hns-studio

echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞..."

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
pm2 stop hns-studio || echo "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
npm ci

# –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
npm run build

# –ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
npm run db:push || echo "–ú–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è"

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
pm2 start ecosystem.config.js
pm2 save

echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
EOFUPDATE

chmod +x $PROJECT_DIR/update.sh
chown hns:hns $PROJECT_DIR/update.sh

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
systemctl enable certbot.timer

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ fail2ban
systemctl enable fail2ban
systemctl start fail2ban

echo -e "${GREEN}‚úÖ –ë–∞–∑–æ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
echo -e "${BLUE}üìã –ß—Ç–æ –¥–∞–ª—å—à–µ:${NC}"
echo "1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ –≤ $PROJECT_DIR"
echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: cd $PROJECT_DIR && sudo -u hns ./update.sh"
echo "3. –ü–æ–ª—É—á–∏—Ç–µ SSL: sudo certbot --nginx -d $DOMAIN -d www.$DOMAIN"
echo "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∞–π—Ç: http://$DOMAIN (–ø–æ—Ç–æ–º https://$DOMAIN)"
echo ""
echo -e "${YELLOW}üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
echo "‚Ä¢ –°—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: pm2 status"
echo "‚Ä¢ –õ–æ–≥–∏: pm2 logs hns-studio"
echo "‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: pm2 restart hns-studio"
echo "‚Ä¢ –°—Ç–∞—Ç—É—Å Nginx: systemctl status nginx"
echo "‚Ä¢ –°—Ç–∞—Ç—É—Å PostgreSQL: systemctl status postgresql"
SCRIPT_CONTENT

chmod +x /tmp/deploy_hns.sh
echo "–°–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω –≤ /tmp/deploy_hns.sh"
echo ""
echo "–î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "sudo /tmp/deploy_hns.sh –≤–∞—à_–¥–æ–º–µ–Ω –ø–∞—Ä–æ–ª—å_–±–¥ [telegram_token] [telegram_chat_id]"
echo ""
echo "–ü—Ä–∏–º–µ—Ä:"
echo "sudo /tmp/deploy_hns.sh hns.dev MySecurePass123 your_bot_token your_chat_id"